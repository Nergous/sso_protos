syntax = "proto3";

package auth;

option go_package = "nergous.sso.v1;ssov1";

service Auth {
    rpc Register (RegisterRequest) returns (RegisterResponse);
    rpc Login (LoginRequest) returns (LoginResponse);
    rpc IsAdmin (IsAdminRequest) returns (IsAdminResponse);
    rpc ValidateToken(ValidateTokenRequest) returns (ValidateTokenResponse);
    rpc UserInfo(UserInfoRequest) returns (UserInfoResponse);
    rpc GetAllUser(GetAllUserRequest) returns (GetAllUserResponse);
    rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
}

message RegisterRequest {
    string email = 1;
    string password = 2;
    string steam_url = 3;
    string path_to_photo = 4;
}

message RegisterResponse {
    int64 user_id = 1;
}

message LoginRequest {
    string email = 1;
    string password = 2;
    int32 app_id = 3;
}

message LoginResponse {
    string token = 1;
}

message IsAdminRequest {
    int64 user_id = 1;
}

message IsAdminResponse {
    bool is_admin = 1;
}

message ValidateTokenRequest {
    string token = 1;
}

message ValidateTokenResponse {
    int64 user_id = 1;
    bool valid = 2;
}

message UserInfoRequest {
    int64 user_id = 1;
}

message UserInfoResponse {
    string email = 1;
    string steam_url = 2;
    string path_to_photo = 3;
}

message GetAllUserRequest {}

message  GetAllUserResponse {
    repeated User user = 1;
}

message User {
    int64 id = 1;
    string email = 2;
    string steam_url = 3;
    string path_to_photo = 4;
    bool is_admin = 5;
}

message UpdateUserRequest {
    int64 id = 1;
    string email = 2;
    string steam_url = 3;
    string path_to_photo = 4;
    bool is_admin = 5;
}

message UpdateUserResponse {}